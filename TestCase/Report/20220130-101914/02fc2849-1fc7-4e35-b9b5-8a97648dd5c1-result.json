{"name": "test_010[data0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_request.Test_request object at 0x000001CA3D9655E0>\ndata = {'data': '', 'headers': '{\"authorization\":\"Bearer eyJhbGciOiJIUzUxMiJ9.eyJqdGkiOiJlODdhNWQwMTE3MmE0NDVmYjUzMmM2MGI4NGF...T-x2sCnx9s_iOg4ZwJ5TZIwLV0hVlMjL_33AiRyDWI_7lpywLccjYWLMGISkQyEbKJ1QS-KPFFxnZZ8w\"}', 'id': 'test_001', 'json': '', ...}\n\n    @pytest.mark.parametrize(\"data\",final_data1)\n    def test_010(self,data):\n        if  data[\"method\"] == \"get\" :\n            requestdata=RequestsHandler().get_Req(url=data['url'],params=data[\"params\"],headers=header_list,json=data[\"json\"],data=data[\"data\"])\n>           asser.assert_code(data['status_code'],requestdata.status_code)\n\ntest_request.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.assertbase.Assertions object at 0x000001CA3D7CE160>, code = 200.0, url_code = 400\n\n    def assert_code(self,code,url_code):\n        \"\"\"\n        验证response状态码\n        \"\"\"\n        self.logger.info(f'预计接口返回code为\"{code}\",实际返回code为:\"{url_code}\"')\n        try:\n>           assert code == url_code\nE           AssertionError\n\n..\\Common\\assertbase.py:30: AssertionError"}, "attachments": [{"name": "log", "source": "2bc01589-7b72-454f-8e9d-391e1526522a-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "339a0000-aaec-4659-abfe-bac1ee75d76b-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "2aca00f4-6bc9-4d96-8a77-4d3f609a7a90-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'module': '品项查询', 'id': 'test_001', 'usecase': '品项查询 ', 'url': 'https://supplychain-server-stg.jmj1995.com/items', 'method': 'get', 'params': '{\"pageNum\":\"1\",\"pageSize\":\"20\"}', 'headers': '{\"authorization\":\"Bearer eyJhbGciOiJIUzUxMiJ9.eyJqdGkiOiJlODdhNWQwMTE3MmE0NDVmYjUzMmM2MGI4NGFjODRhYyIsImF1dGgiOiIiLCJpZCI6MTM2LCJzdWIiOiJwZW5namllIn0.cFFDOuT-x2sCnx9s_iOg4ZwJ5TZIwLV0hVlMjL_33AiRyDWI_7lpywLccjYWLMGISkQyEbKJ1QS-KPFFxnZZ8w\"}', 'json': '', 'data': '', 'type': '', 'status_code': 200.0, 'msg': 12.0, 'result': '', 'testers': 'leo'}"}], "start": 1643509155417, "stop": 1643509155526, "uuid": "b46560ee-70b2-4d20-9f37-0adec331f0e3", "historyId": "a279907d6d5a4673bfb45be79d2ea060", "testCaseId": "35f9eeffffa3137e9037b155d45104d7", "fullName": "test_request.Test_request#test_010", "labels": [{"name": "suite", "value": "test_request"}, {"name": "subSuite", "value": "Test_request"}, {"name": "host", "value": "DESKTOP-MNSA4SL"}, {"name": "thread", "value": "3476-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_request"}]}